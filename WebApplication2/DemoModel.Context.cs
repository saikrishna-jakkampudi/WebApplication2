//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DemoEntities : DbContext
    {
        public DemoEntities()
            : base("name=DemoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EMPDATA> EMPDATAs { get; set; }
        public virtual DbSet<DEPTDATA> DEPTDATAs { get; set; }
    
        public virtual int sp_InsertEmployee(Nullable<int> empno, string ename, string job, Nullable<int> mgr, Nullable<System.DateTime> hiredate, Nullable<int> sal, Nullable<int> comm, Nullable<int> deptno, ObjectParameter result)
        {
            var empnoParameter = empno.HasValue ?
                new ObjectParameter("Empno", empno) :
                new ObjectParameter("Empno", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("Ename", ename) :
                new ObjectParameter("Ename", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var mgrParameter = mgr.HasValue ?
                new ObjectParameter("Mgr", mgr) :
                new ObjectParameter("Mgr", typeof(int));
    
            var hiredateParameter = hiredate.HasValue ?
                new ObjectParameter("Hiredate", hiredate) :
                new ObjectParameter("Hiredate", typeof(System.DateTime));
    
            var salParameter = sal.HasValue ?
                new ObjectParameter("Sal", sal) :
                new ObjectParameter("Sal", typeof(int));
    
            var commParameter = comm.HasValue ?
                new ObjectParameter("Comm", comm) :
                new ObjectParameter("Comm", typeof(int));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("Deptno", deptno) :
                new ObjectParameter("Deptno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertEmployee", empnoParameter, enameParameter, jobParameter, mgrParameter, hiredateParameter, salParameter, commParameter, deptnoParameter, result);
        }
    }
}
